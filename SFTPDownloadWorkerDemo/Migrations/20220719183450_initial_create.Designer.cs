// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SFTPDownloadWorkerDemo.Helpers;

#nullable disable

namespace SFTPDownloadWorkerDemo.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220719183450_initial_create")]
    partial class initial_create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SFTPDownloadWorkerDemo.Entities.SftpLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("LastAccessTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastAccessTimeUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastWriteTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastWriteTimeUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("LocalFilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("SftpLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
